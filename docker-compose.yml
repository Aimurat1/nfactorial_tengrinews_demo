services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
      - static_volume:/backend/static
    environment:
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_DB_USER: ${POSTGRES_DB_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_DB_PORT: ${POSTGRES_DB_PORT}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      # - postgres
      - redis
      - celery
      - celerybeat

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_PUBLIC_BACKEND_URL=http://localhost:8000
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  # postgres:
  #   image: postgres:latest
  #   restart: always
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_DB_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB_NAME}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery:
    build:
      context: ./backend
    command: celery -A nfactorial worker --loglevel=info
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      # - postgres
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0

  celerybeat:
    build:
      context: ./backend
    command: celery -A nfactorial beat --loglevel=info
    volumes:
      - ./backend:/backend
    depends_on:
      - redis
      # - postgres
    environment:
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0

volumes:
  static_volume:
